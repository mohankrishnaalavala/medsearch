version: '3.8'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.1
    container_name: medsearch-elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 1.5g
    cpus: 1.0
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - medsearch-network

  redis:
    image: redis:7-alpine
    container_name: medsearch-redis
    command: redis-server --maxmemory 512mb --maxmemory-policy allkeys-lru
    mem_limit: 600m
    cpus: 0.5
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - medsearch-network

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: medsearch-api
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - REDIS_URL=redis://redis:6379
      - SQLITE_PATH=/app/data/medsearch.db
      - GOOGLE_CLOUD_PROJECT=${GOOGLE_CLOUD_PROJECT}
      - GOOGLE_APPLICATION_CREDENTIALS=/app/medsearch-key.json
      - APP_ENV=development
      - APP_DEBUG=true
      - LOG_LEVEL=DEBUG
    mem_limit: 1.5g
    cpus: 1.0
    depends_on:
      elasticsearch:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - ./logs:/app/logs
      - ./backend/data:/app/data
      - ./medsearch-key.json:/app/medsearch-key.json:ro
    ports:
      - "8000:8000"
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - medsearch-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: medsearch-frontend
    mem_limit: 512m
    cpus: 0.5
    ports:
      - "3000:3000"
    depends_on:
      - api
    networks:
      - medsearch-network

  nginx:
    image: nginx:alpine
    container_name: medsearch-nginx
    mem_limit: 128m
    cpus: 0.25
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    depends_on:
      - frontend
      - api
    networks:
      - medsearch-network
    restart: unless-stopped

volumes:
  es_data:
    driver: local
  redis_data:
    driver: local

networks:
  medsearch-network:
    driver: bridge

